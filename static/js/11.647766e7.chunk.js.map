{"version":3,"sources":["utils/ErrorText.js","components/Editors.js","components/ComponentCustom.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","components/Complaints/Complaints.js"],"names":["ErrorText","errorText","className","extractor","editdata","constfieldsNameList","result","map","item","index","Editor","fullScreen","renderer","isShowing","fieldNameMapping","onSave","onClose","useState","fields","setfields","useEffect","__DEV__","console","log","ToRender","e","target","name","value","Dialog","open","aria-labelledby","DialogTitle","DialogContent","Grid","container","DialogActions","Button","onClick","color","cstyles","makeStyles","theme","notfound","palette","grey","fontWeight","fab","position","right","spacing","bottom","ComponentCustom","updateObject","deleteObject","queryObject","addObject","editorRender","dialogRender","setLoading","usePageLoadingContext","editData","setEditData","showEditor","setShowEditor","showingSnackBar","setShowingSnackbar","message","setMessage","shouldShowSnackbar","setShouldShowSnackbar","showExpanded","setShowExpanded","hasMore","setHasMore","useQuery","query_query","variables","options","skip","limit","query_params","loading","data","fetchMore","error","useMutation","update_query","updateDetails","sup","delete_query","update","cache","deleteDetails","delNews","add_query","addDetails","addNews","preset_styles","useStyles","classes","pg","query_tablename","length","error_message","success_message","justify","Typography","variant","null_found","items","itemIndex","forEachItem","delete_unique_field","delete_unique_var","renderData","i","cItems","j","push","loader","endMessage","next","res","Math","floor","updateQuery","prev","fetchMoreResult","py2","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","newInfo","unqiue_field","query_unique_field","update_var_unique","update_var_info","add_var_info","xs","Fab","Icon","MenuItem","forwardRef","props","ref","tabIndex","_props$component","component","_props$disableGutters","disableGutters","_props$role","role","selected","tabIndexProp","other","disabled","undefined","createElement","button","dense","root","gutters","typography","body1","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","GET_COMPLAINTS","gql","UPDATE_COMPLAINT","DELETE_COMPLAINT","ADD_COMPLAINT","required","Complaints","onClickEdit","onClickDelete","date","Date","setTime","create_date","day","getUTCDate","mon","getMonth","year","getFullYear","fdate","key","sm","md","lg","classname","mx2","my2","noWrap","_id","complaint_message","complaint_status","disableSpacing","onChange","multiline","rowsMax","rows","label","placeholder","fullWidth","mb1","htmlFor","inputProps"],"mappings":"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","file":"static/js/11.647766e7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const ErrorText = ({errorText}) => {\r\n    return (\r\n        <div className=\"col-12 text-center\">\r\n            <div className=\"display-inline-block\">\r\n                <h2 className=\"bg-danger p-2 rounded-sm text-light text-center\">\r\n                    {errorText}\r\n                </h2>\r\n            </div>\r\n        </div>\r\n    )\r\n} ","import React, {useState, useEffect} from 'react'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport { Grid, Card,  CardContent, Typography, IconButton, CardActions, Icon, Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Snackbar, makeStyles, Fab } from '@material-ui/core'\r\nimport { useStyles } from 'utils/preset_styles'\r\nimport { fontWeight } from '@material-ui/system'\r\nimport { __DEV__ } from 'cconfig'\r\n\r\nconst extractor = (editdata, constfieldsNameList) => {\r\n    const result = {}\r\n    constfieldsNameList.map(\r\n        (item, index) => {\r\n            result[item] = (editdata && editdata[item]) || \"\"\r\n        }\r\n    )\r\n    return result\r\n}\r\n\r\nexport const Editor = ({fullScreen, renderer, isShowing, editdata, constfieldsNameList, fieldNameMapping, onSave, onClose}) => {\r\n    const [fields, setfields] = useState(extractor(editdata, constfieldsNameList))\r\n\r\n    useEffect(() => {\r\n        setfields(extractor(editdata, constfieldsNameList))\r\n    }, [isShowing])\r\n\r\n    const onChange = (e) => {\r\n        setfields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    if(__DEV__) {\r\n        console.log(\"----------EDITOR BEGIN-------------\")\r\n        console.log(isShowing)\r\n        console.log(editdata)\r\n        console.log(constfieldsNameList)\r\n        console.log(fieldNameMapping)\r\n        console.log(\"----------EDITOR END-------------\")\r\n    }\r\n\r\n    const ToRender = renderer(fields, onChange)\r\n    console.log(ToRender)\r\n\r\n    return (\r\n        <Dialog fullScreen={fullScreen} open={isShowing} onClose={() => onClose()} aria-labelledby=\"student-data-edit\">\r\n            <DialogTitle>Edit Details </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container>\r\n                    {ToRender}\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()} >Cancel</Button>\r\n                <Button color=\"primary\" onClick={() => onSave(fields)}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport 'common/css/theme.css'\r\nimport { usePageLoadingContext } from 'utils/context'\r\nimport { LoadText } from 'utils/Loaders'\r\nimport { ErrorText } from 'utils/ErrorText'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\nimport { Grid, Card,  CardContent, Typography, IconButton, CardActions, Icon, Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Snackbar, makeStyles, Fab } from '@material-ui/core'\r\nimport { useStyles } from 'utils/preset_styles'\r\nimport { fontWeight } from '@material-ui/system'\r\nimport { Editor } from 'components/Editors'\r\nimport { __DEV__ } from 'cconfig'\r\n\r\nconst cstyles = makeStyles((theme) => ({\r\n    notfound: {\r\n        color: theme.palette.grey[300],\r\n        fontWeight: 500\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        right: theme.spacing(2),\r\n        bottom: theme.spacing(2)\r\n    }\r\n})) \r\n\r\nexport const ComponentCustom = ({\r\n    updateObject,\r\n    deleteObject,\r\n    queryObject,\r\n    addObject,\r\n    constfieldsNameList,\r\n    fieldNameMapping,\r\n    editorRender,\r\n    fullScreen,\r\n    dialogRender\r\n}) => {\r\n\r\n    const LIMIT = 12\r\n\r\n    const {setLoading} = usePageLoadingContext()\r\n    const [editData, setEditData] = useState(null)\r\n    const [showEditor, setShowEditor] = useState(false)\r\n    const [showingSnackBar, setShowingSnackbar] = useState(false)\r\n    const [message, setMessage] = useState(\"Dummy Message\")\r\n    const [shouldShowSnackbar, setShouldShowSnackbar] = useState(false)\r\n    const [showExpanded, setShowExpanded] = useState(-1)\r\n    const [hasMore, setHasMore] = useState(true)\r\n\r\n    const {loading, data, error, fetchMore} = useQuery(queryObject.query_query, {\r\n        variables: {\r\n            options: {\r\n                skip: 0,\r\n                limit: LIMIT,\r\n                ...queryObject.query_params\r\n            }\r\n        }\r\n    })\r\n    \r\n    const [updateDetails, sup] = useMutation(updateObject.update_query)\r\n    const [deleteDetails, delNews] = useMutation(deleteObject.delete_query, {\r\n        update(cache, data) {\r\n\r\n            // const queryData = cache.readQuery({\r\n            //     query: queryObject.query_query,\r\n            //     variables: {\r\n            //         skip: 0,\r\n            //         limit: LIMIT,\r\n            //         ...queryObject.query_params\r\n            //     }   \r\n            // })\r\n\r\n            console.log(\"___DELETE___\")\r\n            console.log(data)\r\n            // console.log(queryData)\r\n\r\n            // cache.writeQuery({\r\n            //     query: queryObject\r\n            // })\r\n        }\r\n    })\r\n    const [addDetails, addNews] = useMutation(addObject.add_query, {\r\n        update(cache, data) {\r\n\r\n            // const queryData = cache.readQuery({\r\n            //     query: queryObject.query_query,\r\n            //     variables: {\r\n            //         skip: 0,\r\n            //         limit: LIMIT,\r\n            //         ...queryObject.query_params\r\n            //     }   \r\n            // })\r\n\r\n            console.log(\"___ADD___\")\r\n            console.log(data)\r\n            // console.log(queryData)\r\n\r\n        }\r\n    })\r\n\r\n    const preset_styles = useStyles()\r\n    const classes = cstyles()\r\n    const pg = usePageLoadingContext()\r\n\r\n\r\n    if(__DEV__){\r\n        console.log(\"...Component Custom..\")\r\n        console.log(data)\r\n        console.log(\".....\")\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(loading === true) {\r\n            setLoading(true)\r\n        } else if(loading === false) {\r\n            setLoading(false)\r\n            if(!data || data[queryObject.query_tablename].length < LIMIT) {\r\n                setHasMore(false)\r\n            } \r\n        }\r\n    }, [loading])\r\n\r\n    useEffect(() => {\r\n        if(sup && sup.loading === false && shouldShowSnackbar === true) {\r\n            setMessage(sup.error ? updateObject.error_message : updateObject.success_message)\r\n            setShowingSnackbar(true)\r\n            setLoading(false)\r\n        }\r\n    }, [sup.loading])\r\n\r\n    useEffect(() => {\r\n\r\n        if(addNews && addNews.loading === false && shouldShowSnackbar === true) {\r\n            setMessage(addNews.error ? addObject.error_message : addObject.success_message)\r\n            setShowingSnackbar(true)\r\n            setLoading(false)\r\n        }\r\n    }, [addNews.loading])\r\n\r\n    useEffect(() => {\r\n\r\n        if(delNews && delNews.loading === false && shouldShowSnackbar === true) {\r\n            setMessage(delNews.error ? deleteObject.error_message : deleteObject.success_message)\r\n            setShowingSnackbar(true)\r\n            setLoading(false)\r\n        }\r\n    }, [delNews.loading])\r\n\r\n    let ToRender\r\n\r\n    console.log(data)\r\n\r\n    if(loading === true) {\r\n        ToRender = <LoadText />\r\n    }\r\n    else if(typeof(data) !== 'undefined' && data) {\r\n        if(data[queryObject.query_tablename].length === 0) {\r\n            ToRender = (\r\n                <Grid container justify=\"center\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h2\" className={classes.notfound}>{queryObject.null_found}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        } else {\r\n            const items = data[queryObject.query_tablename].map(\r\n                (item, itemIndex) => queryObject.forEachItem(\r\n                    item, \r\n                    itemIndex,\r\n                    () => {\r\n                            setEditData(itemIndex)\r\n                            setShowEditor(true)\r\n                        },\r\n                    () => {\r\n                        if(__DEV__){\r\n                            console.log(\".........\")\r\n                            console.log(item)\r\n                            console.log(deleteObject.delete_unique_field)\r\n                            console.log(deleteObject.delete_unique_var)\r\n                            console.log(item[deleteObject.delete_unique_field])\r\n                            console.log(\"..........\")\r\n                        }\r\n                        deleteDetails({variables: {[deleteObject.delete_unique_var]: item[deleteObject.delete_unique_field]}})\r\n                        setShouldShowSnackbar(true)\r\n                    }, \r\n                    setShowExpanded\r\n                )\r\n            )\r\n            const renderData = []\r\n            for(let i = 0; i < data[queryObject.query_tablename].length; i+=4){\r\n                const cItems = []\r\n                for(let j = i; j < i + 4; ++j) {\r\n                    cItems.push(items[j])\r\n                }\r\n                renderData.push(\r\n                <Grid container>\r\n                    {cItems}\r\n                </Grid>\r\n                )\r\n            } \r\n            if(__DEV__){\r\n                console.log(\"xxxx\")\r\n                console.log(items)\r\n                console.log(\"xxxx\")\r\n            }\r\n            ToRender = (\r\n                    <InfiniteScroll\r\n                    hasMore={hasMore}\r\n                    loader={<div>Loading More Items...</div>}\r\n                    endMessage={<div>Loaded All!</div>}\r\n                    next={() => {\r\n                        const res = data[queryObject.query_tablename].length / LIMIT\r\n                        console.log(`SKIP: ${res} | ${Math.floor(res)}`)\r\n                        return fetchMore({\r\n                        variables: {\r\n                            options: {\r\n                                skip: res,\r\n                                limit: LIMIT,\r\n                                ...queryObject.query_params\r\n                            }\r\n                        }, updateQuery: (prev, { fetchMoreResult }) => {\r\n                            if (!fetchMoreResult || !hasMore) return prev;\r\n                            console.log(prev)\r\n                            console.log(queryObject)\r\n                            console.log(fetchMoreResult)\r\n                            if(fetchMoreResult[queryObject.query_tablename].length < LIMIT) {\r\n                                setHasMore(false)\r\n                            }\r\n                            return {\r\n                                [queryObject.query_tablename]: [\r\n                                    ...prev[queryObject.query_tablename],\r\n                                    ...fetchMoreResult[queryObject.query_tablename]\r\n                                ]\r\n                            }\r\n                        }\r\n                    })}}>\r\n                        \r\n                    {renderData}\r\n                    </InfiniteScroll>\r\n            )\r\n                       \r\n        }\r\n    } else {\r\n        ToRender = <ErrorText errorText={queryObject.null_found ? queryObject.null_found : \"Nothing Found :/\"}/>\r\n    }\r\n\r\n    if(__DEV__) {\r\n        console.log(ToRender)\r\n    }\r\n\r\n    return (\r\n        <Grid container className={preset_styles.py2} >\r\n            <Snackbar \r\n                anchorOrigin={{vertical: 'top', horizontal: \"right\"}}\r\n                open={showingSnackBar}\r\n                autoHideDuration={3000}\r\n                message={message}\r\n                onClose={() => {\r\n                    setShowingSnackbar(false)\r\n                }}\r\n            />\r\n            <Editor\r\n                fullScreen={fullScreen ? true : false}\r\n                renderer={editorRender}\r\n                isShowing={showEditor} \r\n                constfieldsNameList={constfieldsNameList}\r\n                fieldNameMapping={fieldNameMapping}\r\n                editdata={editData !== null && data && data[queryObject.query_tablename] ? data[queryObject.query_tablename][editData] : null}\r\n                onClose={() => {\r\n                    if(editData !== -1){\r\n                        setEditData(-1);\r\n                    }\r\n                    setShowEditor(false)\r\n                }}\r\n                onSave={(newInfo) => {\r\n\r\n                    if(__DEV__){\r\n                        console.log(\"____ON SAVE BEGIN____\")\r\n                        console.log(newInfo)\r\n                        console.log(\"____ON SAVE END____\")\r\n                    }\r\n\r\n                    if(editData !== null) {\r\n                        const unqiue_field = data[queryObject.query_tablename][editData][queryObject.query_unique_field]\r\n                        setShowEditor(false)\r\n                        pg.setLoading(true)\r\n\r\n                        updateDetails({variables: {\r\n                            [updateObject.update_var_unique]: unqiue_field,\r\n                            [updateObject.update_var_info]: newInfo\r\n                        }})\r\n                        setShouldShowSnackbar(true)\r\n                    } else {\r\n                        setShowEditor(false)\r\n                        pg.setLoading(true)\r\n\r\n                        addDetails({\r\n                            variables: {\r\n                                [addObject.add_var_info]: newInfo\r\n                            }\r\n                        })\r\n                        setShouldShowSnackbar(true)\r\n                    }\r\n                }}/>\r\n            <Grid item xs={12}>\r\n                {ToRender}\r\n            </Grid>\r\n            <Fab className={classes.fab} color=\"secondary\" onClick={() => {\r\n                setEditData(null)\r\n                setShowEditor(true)\r\n            }}>\r\n                <Icon>\r\n                    add\r\n                </Icon>\r\n            </Fab>\r\n            <Dialog onClose={() => setShowExpanded(-1)} color=\"secondary\" open={showExpanded !== -1 && showExpanded >= 0}>\r\n                {dialogRender && showExpanded !== -1 && showExpanded >= 0 && data && data[queryObject.query_tablename] ? dialogRender(data[queryObject.query_tablename][showExpanded]) : null}\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ComponentCustom","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO To remove in v5?\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: {\n      dense: classes.dense\n    },\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import React, {useState, useEffect} from 'react'\r\nimport 'common/css/theme.css'\r\nimport gql from 'graphql-tag'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport { Grid, TextField, FormControl, Card,  CardContent, Typography, IconButton, CardActions, Icon, makeStyles, Select, MenuItem, InputLabel } from '@material-ui/core'\r\nimport { useStyles } from 'utils/preset_styles'\r\nimport ComponentCustom from 'components/ComponentCustom'\r\n\r\nconst cstyles = makeStyles((theme) => ({\r\n    notfound: {\r\n        color: theme.palette.grey[300],\r\n        fontWeight: 500\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        right: theme.spacing(2),\r\n        bottom: theme.spacing(2)\r\n    }\r\n})) \r\n\r\nconst GET_COMPLAINTS = gql`\r\nquery AllComplaints($options: InpOptions){\r\n    allComplaints(options: $options) {\r\n        _id\r\n        complaint_message\r\n        complaint_status\r\n        create_date\r\n    }\r\n}\r\n`\r\n\r\nconst UPDATE_COMPLAINT = gql`\r\nmutation UpdateComplaint($id: ID!, $complaint: InpComplaint!) {\r\n    updateComplaint(id: $id, complaint:  $complaint) {\r\n        _id\r\n        complaint_message\r\n        complaint_status\r\n        create_date\r\n    }   \r\n}\r\n`\r\n\r\nconst DELETE_COMPLAINT = gql`\r\nmutation DeleteComplaint($id: ID!) {\r\n    deleteComplaint(id: $id){\r\n        _id\r\n    }\r\n}\r\n`\r\n\r\nconst ADD_COMPLAINT = gql`\r\nmutation AddComplaint($complaint: InpComplaint!) {\r\n    addComplaint(complaint: $complaint) {\r\n        _id\r\n        complaint_message\r\n        complaint_status\r\n        create_date\r\n    }\r\n}\r\n`\r\n\r\nconst constfieldsNameList = [\r\n    'complaint_message',\r\n    'complaint_status'\r\n]\r\n\r\nconst fieldNameMapping = {\r\n    'complaint_message': {value: \"Complaint Message\", required: true},\r\n    'complaint_status': {value: \"Complaint Status\", required: true},\r\n}\r\n\r\n\r\nconst Complaints = () => {\r\n\r\n    const preset_styles = useStyles()\r\n\r\n    const renderHandler = (item, itemIndex, onClickEdit, onClickDelete) => {\r\n\r\n        const date = new Date()\r\n        date.setTime(item.create_date)\r\n        const day = date.getUTCDate()\r\n        const mon = date.getMonth() + 1\r\n        const year = date.getFullYear()\r\n        const fdate = `${mon}/${day}/${year}`\r\n    \r\n        return (\r\n        <Grid key={itemIndex} item xs={12} sm={6} md={4} lg={3} classname={`${preset_styles.mx2} ${preset_styles.my2}`}>\r\n            <Card>\r\n            <CardContent>\r\n                <Typography noWrap>ID: {item._id}</Typography>\r\n                <Typography noWrap>{item.complaint_message}</Typography>\r\n                <Typography noWrap>Status: <Typography component=\"span\" color={\r\n                    (item.complaint_status === \"pending\" ? 'inherit' : (item.complaint_status === 'inprogress' ? \"primary\" : \"error\") ) \r\n                }>{item.complaint_status}</Typography> </Typography>\r\n                <Typography noWrap>Created On: {fdate}</Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                    <IconButton onClick={onClickEdit}>\r\n                        <Icon>edit</Icon>\r\n                    </IconButton>\r\n                    <IconButton onClick={onClickDelete}>\r\n                        <Icon>delete</Icon>\r\n                    </IconButton>\r\n            </CardActions>\r\n            </Card>\r\n        </Grid>)\r\n    }\r\n    \r\n    return (\r\n        <ComponentCustom \r\n            updateObject={{\r\n                update_query: UPDATE_COMPLAINT,\r\n                error_message: \"Error updating Complaint\",\r\n                success_message: \"Updated Complaint!\",\r\n                update_var_unique: \"id\",\r\n                update_var_info: \"complaint\"\r\n            }}\r\n\r\n            deleteObject={{\r\n                delete_query: DELETE_COMPLAINT,\r\n                delete_unique_var: \"id\",\r\n                delete_unique_field: \"_id\",\r\n                error_message: \"Error deleting Complaint\",\r\n                success_message: \"Deleted Complaint!\"\r\n            }}\r\n\r\n            queryObject={{\r\n                query_query: GET_COMPLAINTS,\r\n                query_unique_field: \"_id\",\r\n                query_tablename: \"allComplaints\",\r\n                forEachItem: renderHandler\r\n            }}\r\n\r\n            addObject={{\r\n                add_query: ADD_COMPLAINT,\r\n                error_message: \"Error Adding Complaint\",\r\n                success_message: \"Added Complaint\",\r\n                add_var_info: \"complaint\"\r\n            }}  \r\n\r\n            constfieldsNameList = {constfieldsNameList}\r\n            fieldNameMapping={fieldNameMapping}\r\n\r\n            editorRender = {(fields, onChange) => {\r\n\r\n                console.log(fields)\r\n\r\n                return (\r\n                    <Grid item xs={12}>\r\n                        <TextField multiline rowsMax={5} rows={5} label=\"Complaint Message\" placeholder=\"Complaint Message\" name=\"complaint_message\" onChange={onChange} value={fields.complaint_message} fullWidth className={`${preset_styles.mb1}`} />\r\n                        <FormControl fullWidth>\r\n                        <InputLabel htmlFor=\"age-simple\">Complaint Status</InputLabel>\r\n                            <Select value={fields.complaint_status}\r\n                            onChange={onChange} inputProps={{name: \"complaint_status\"}}>\r\n                                <MenuItem value={\"pending\"}>Pending</MenuItem>\r\n                                <MenuItem value={\"inprogress\"}>In Progress</MenuItem>\r\n                                <MenuItem value={\"resolved\"}>Resolved</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                )\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Complaints"],"sourceRoot":""}