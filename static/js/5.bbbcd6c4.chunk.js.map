{"version":3,"sources":["utils/ErrorText.js","components/Editors.js","components/ComponentCustom.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/Link/Link.js","components/Clubs/Arts/Arts.js"],"names":["ErrorText","errorText","className","extractor","editdata","constfieldsNameList","result","map","item","index","Editor","fullScreen","renderer","isShowing","fieldNameMapping","onSave","onClose","useState","fields","setfields","useEffect","__DEV__","console","log","ToRender","e","target","name","value","Dialog","open","aria-labelledby","DialogTitle","DialogContent","Grid","container","DialogActions","Button","onClick","color","cstyles","makeStyles","theme","notfound","palette","grey","fontWeight","fab","position","right","spacing","bottom","ComponentCustom","updateObject","deleteObject","queryObject","addObject","editorRender","dialogRender","setLoading","usePageLoadingContext","editData","setEditData","showEditor","setShowEditor","showingSnackBar","setShowingSnackbar","message","setMessage","shouldShowSnackbar","setShouldShowSnackbar","showExpanded","setShowExpanded","hasMore","setHasMore","useQuery","query_query","variables","options","skip","limit","query_params","loading","data","fetchMore","error","useMutation","update_query","updateDetails","sup","delete_query","update","cache","deleteDetails","delNews","add_query","addDetails","addNews","preset_styles","useStyles","classes","pg","query_tablename","length","error_message","success_message","justify","Typography","variant","null_found","items","itemIndex","forEachItem","delete_unique_field","delete_unique_var","renderData","i","cItems","j","push","loader","endMessage","next","res","Math","floor","updateQuery","prev","fetchMoreResult","py2","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","newInfo","unqiue_field","query_unique_field","update_var_unique","update_var_info","add_var_info","xs","Fab","Icon","CardHeader","forwardRef","props","ref","action","avatar","classNameProp","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","other","type","createElement","display","root","content","alignItems","padding","flex","marginRight","alignSelf","marginTop","Link","_props$color","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","_useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","concat","button","event","underlineNone","textDecoration","underlineHover","underlineAlways","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","cursor","userSelect","verticalAlign","borderStyle","GET_ARTS","gql","UPDATE_ART","DELETE_ART","ADD_ART","required","cStyles","editor","fontFamily","Arts","onClickEdit","onClickDelete","date","Date","setTime","create_date","day","getUTCDate","mon","getMonth","year","getFullYear","fdate","key","sm","md","lg","classname","mx2","my2","creator","about_creator","art_type","style","width","maxHeight","src","url_path","rel","href","disableSpacing","dividers","text","onChange","noWrap","fullWidth","label","art_format","inputProps"],"mappings":"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","file":"static/js/5.bbbcd6c4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const ErrorText = ({errorText}) => {\r\n    return (\r\n        <div className=\"col-12 text-center\">\r\n            <div className=\"display-inline-block\">\r\n                <h2 className=\"bg-danger p-2 rounded-sm text-light text-center\">\r\n                    {errorText}\r\n                </h2>\r\n            </div>\r\n        </div>\r\n    )\r\n} ","import React, {useState, useEffect} from 'react'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport { Grid, Card,  CardContent, Typography, IconButton, CardActions, Icon, Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Snackbar, makeStyles, Fab } from '@material-ui/core'\r\nimport { useStyles } from 'utils/preset_styles'\r\nimport { fontWeight } from '@material-ui/system'\r\nimport { __DEV__ } from 'cconfig'\r\n\r\nconst extractor = (editdata, constfieldsNameList) => {\r\n    const result = {}\r\n    constfieldsNameList.map(\r\n        (item, index) => {\r\n            result[item] = (editdata && editdata[item]) || \"\"\r\n        }\r\n    )\r\n    return result\r\n}\r\n\r\nexport const Editor = ({fullScreen, renderer, isShowing, editdata, constfieldsNameList, fieldNameMapping, onSave, onClose}) => {\r\n    const [fields, setfields] = useState(extractor(editdata, constfieldsNameList))\r\n\r\n    useEffect(() => {\r\n        setfields(extractor(editdata, constfieldsNameList))\r\n    }, [isShowing])\r\n\r\n    const onChange = (e) => {\r\n        setfields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    if(__DEV__) {\r\n        console.log(\"----------EDITOR BEGIN-------------\")\r\n        console.log(isShowing)\r\n        console.log(editdata)\r\n        console.log(constfieldsNameList)\r\n        console.log(fieldNameMapping)\r\n        console.log(\"----------EDITOR END-------------\")\r\n    }\r\n\r\n    const ToRender = renderer(fields, onChange)\r\n    console.log(ToRender)\r\n\r\n    return (\r\n        <Dialog fullScreen={fullScreen} open={isShowing} onClose={() => onClose()} aria-labelledby=\"student-data-edit\">\r\n            <DialogTitle>Edit Details </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container>\r\n                    {ToRender}\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()} >Cancel</Button>\r\n                <Button color=\"primary\" onClick={() => onSave(fields)}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport 'common/css/theme.css'\r\nimport { usePageLoadingContext } from 'utils/context'\r\nimport { LoadText } from 'utils/Loaders'\r\nimport { ErrorText } from 'utils/ErrorText'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\nimport { Grid, Card,  CardContent, Typography, IconButton, CardActions, Icon, Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Snackbar, makeStyles, Fab } from '@material-ui/core'\r\nimport { useStyles } from 'utils/preset_styles'\r\nimport { fontWeight } from '@material-ui/system'\r\nimport { Editor } from 'components/Editors'\r\nimport { __DEV__ } from 'cconfig'\r\n\r\nconst cstyles = makeStyles((theme) => ({\r\n    notfound: {\r\n        color: theme.palette.grey[300],\r\n        fontWeight: 500\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        right: theme.spacing(2),\r\n        bottom: theme.spacing(2)\r\n    }\r\n})) \r\n\r\nexport const ComponentCustom = ({\r\n    updateObject,\r\n    deleteObject,\r\n    queryObject,\r\n    addObject,\r\n    constfieldsNameList,\r\n    fieldNameMapping,\r\n    editorRender,\r\n    fullScreen,\r\n    dialogRender\r\n}) => {\r\n\r\n    const LIMIT = 12\r\n\r\n    const {setLoading} = usePageLoadingContext()\r\n    const [editData, setEditData] = useState(null)\r\n    const [showEditor, setShowEditor] = useState(false)\r\n    const [showingSnackBar, setShowingSnackbar] = useState(false)\r\n    const [message, setMessage] = useState(\"Dummy Message\")\r\n    const [shouldShowSnackbar, setShouldShowSnackbar] = useState(false)\r\n    const [showExpanded, setShowExpanded] = useState(-1)\r\n    const [hasMore, setHasMore] = useState(true)\r\n\r\n    const {loading, data, error, fetchMore} = useQuery(queryObject.query_query, {\r\n        variables: {\r\n            options: {\r\n                skip: 0,\r\n                limit: LIMIT,\r\n                ...queryObject.query_params\r\n            }\r\n        }\r\n    })\r\n    \r\n    const [updateDetails, sup] = useMutation(updateObject.update_query)\r\n    const [deleteDetails, delNews] = useMutation(deleteObject.delete_query, {\r\n        update(cache, data) {\r\n\r\n            // const queryData = cache.readQuery({\r\n            //     query: queryObject.query_query,\r\n            //     variables: {\r\n            //         skip: 0,\r\n            //         limit: LIMIT,\r\n            //         ...queryObject.query_params\r\n            //     }   \r\n            // })\r\n\r\n            console.log(\"___DELETE___\")\r\n            console.log(data)\r\n            // console.log(queryData)\r\n\r\n            // cache.writeQuery({\r\n            //     query: queryObject\r\n            // })\r\n        }\r\n    })\r\n    const [addDetails, addNews] = useMutation(addObject.add_query, {\r\n        update(cache, data) {\r\n\r\n            // const queryData = cache.readQuery({\r\n            //     query: queryObject.query_query,\r\n            //     variables: {\r\n            //         skip: 0,\r\n            //         limit: LIMIT,\r\n            //         ...queryObject.query_params\r\n            //     }   \r\n            // })\r\n\r\n            console.log(\"___ADD___\")\r\n            console.log(data)\r\n            // console.log(queryData)\r\n\r\n        }\r\n    })\r\n\r\n    const preset_styles = useStyles()\r\n    const classes = cstyles()\r\n    const pg = usePageLoadingContext()\r\n\r\n\r\n    if(__DEV__){\r\n        console.log(\"...Component Custom..\")\r\n        console.log(data)\r\n        console.log(\".....\")\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(loading === true) {\r\n            setLoading(true)\r\n        } else if(loading === false) {\r\n            setLoading(false)\r\n            if(!data || data[queryObject.query_tablename].length < LIMIT) {\r\n                setHasMore(false)\r\n            } \r\n        }\r\n    }, [loading])\r\n\r\n    useEffect(() => {\r\n        if(sup && sup.loading === false && shouldShowSnackbar === true) {\r\n            setMessage(sup.error ? updateObject.error_message : updateObject.success_message)\r\n            setShowingSnackbar(true)\r\n            setLoading(false)\r\n        }\r\n    }, [sup.loading])\r\n\r\n    useEffect(() => {\r\n\r\n        if(addNews && addNews.loading === false && shouldShowSnackbar === true) {\r\n            setMessage(addNews.error ? addObject.error_message : addObject.success_message)\r\n            setShowingSnackbar(true)\r\n            setLoading(false)\r\n        }\r\n    }, [addNews.loading])\r\n\r\n    useEffect(() => {\r\n\r\n        if(delNews && delNews.loading === false && shouldShowSnackbar === true) {\r\n            setMessage(delNews.error ? deleteObject.error_message : deleteObject.success_message)\r\n            setShowingSnackbar(true)\r\n            setLoading(false)\r\n        }\r\n    }, [delNews.loading])\r\n\r\n    let ToRender\r\n\r\n    console.log(data)\r\n\r\n    if(loading === true) {\r\n        ToRender = <LoadText />\r\n    }\r\n    else if(typeof(data) !== 'undefined' && data) {\r\n        if(data[queryObject.query_tablename].length === 0) {\r\n            ToRender = (\r\n                <Grid container justify=\"center\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h2\" className={classes.notfound}>{queryObject.null_found}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        } else {\r\n            const items = data[queryObject.query_tablename].map(\r\n                (item, itemIndex) => queryObject.forEachItem(\r\n                    item, \r\n                    itemIndex,\r\n                    () => {\r\n                            setEditData(itemIndex)\r\n                            setShowEditor(true)\r\n                        },\r\n                    () => {\r\n                        if(__DEV__){\r\n                            console.log(\".........\")\r\n                            console.log(item)\r\n                            console.log(deleteObject.delete_unique_field)\r\n                            console.log(deleteObject.delete_unique_var)\r\n                            console.log(item[deleteObject.delete_unique_field])\r\n                            console.log(\"..........\")\r\n                        }\r\n                        deleteDetails({variables: {[deleteObject.delete_unique_var]: item[deleteObject.delete_unique_field]}})\r\n                        setShouldShowSnackbar(true)\r\n                    }, \r\n                    setShowExpanded\r\n                )\r\n            )\r\n            const renderData = []\r\n            for(let i = 0; i < data[queryObject.query_tablename].length; i+=4){\r\n                const cItems = []\r\n                for(let j = i; j < i + 4; ++j) {\r\n                    cItems.push(items[j])\r\n                }\r\n                renderData.push(\r\n                <Grid container>\r\n                    {cItems}\r\n                </Grid>\r\n                )\r\n            } \r\n            if(__DEV__){\r\n                console.log(\"xxxx\")\r\n                console.log(items)\r\n                console.log(\"xxxx\")\r\n            }\r\n            ToRender = (\r\n                    <InfiniteScroll\r\n                    hasMore={hasMore}\r\n                    loader={<div>Loading More Items...</div>}\r\n                    endMessage={<div>Loaded All!</div>}\r\n                    next={() => {\r\n                        const res = data[queryObject.query_tablename].length / LIMIT\r\n                        console.log(`SKIP: ${res} | ${Math.floor(res)}`)\r\n                        return fetchMore({\r\n                        variables: {\r\n                            options: {\r\n                                skip: res,\r\n                                limit: LIMIT,\r\n                                ...queryObject.query_params\r\n                            }\r\n                        }, updateQuery: (prev, { fetchMoreResult }) => {\r\n                            if (!fetchMoreResult || !hasMore) return prev;\r\n                            console.log(prev)\r\n                            console.log(queryObject)\r\n                            console.log(fetchMoreResult)\r\n                            if(fetchMoreResult[queryObject.query_tablename].length < LIMIT) {\r\n                                setHasMore(false)\r\n                            }\r\n                            return {\r\n                                [queryObject.query_tablename]: [\r\n                                    ...prev[queryObject.query_tablename],\r\n                                    ...fetchMoreResult[queryObject.query_tablename]\r\n                                ]\r\n                            }\r\n                        }\r\n                    })}}>\r\n                        \r\n                    {renderData}\r\n                    </InfiniteScroll>\r\n            )\r\n                       \r\n        }\r\n    } else {\r\n        ToRender = <ErrorText errorText={queryObject.null_found ? queryObject.null_found : \"Nothing Found :/\"}/>\r\n    }\r\n\r\n    if(__DEV__) {\r\n        console.log(ToRender)\r\n    }\r\n\r\n    return (\r\n        <Grid container className={preset_styles.py2} >\r\n            <Snackbar \r\n                anchorOrigin={{vertical: 'top', horizontal: \"right\"}}\r\n                open={showingSnackBar}\r\n                autoHideDuration={3000}\r\n                message={message}\r\n                onClose={() => {\r\n                    setShowingSnackbar(false)\r\n                }}\r\n            />\r\n            <Editor\r\n                fullScreen={fullScreen ? true : false}\r\n                renderer={editorRender}\r\n                isShowing={showEditor} \r\n                constfieldsNameList={constfieldsNameList}\r\n                fieldNameMapping={fieldNameMapping}\r\n                editdata={editData !== null && data && data[queryObject.query_tablename] ? data[queryObject.query_tablename][editData] : null}\r\n                onClose={() => {\r\n                    if(editData !== -1){\r\n                        setEditData(-1);\r\n                    }\r\n                    setShowEditor(false)\r\n                }}\r\n                onSave={(newInfo) => {\r\n\r\n                    if(__DEV__){\r\n                        console.log(\"____ON SAVE BEGIN____\")\r\n                        console.log(newInfo)\r\n                        console.log(\"____ON SAVE END____\")\r\n                    }\r\n\r\n                    if(editData !== null) {\r\n                        const unqiue_field = data[queryObject.query_tablename][editData][queryObject.query_unique_field]\r\n                        setShowEditor(false)\r\n                        pg.setLoading(true)\r\n\r\n                        updateDetails({variables: {\r\n                            [updateObject.update_var_unique]: unqiue_field,\r\n                            [updateObject.update_var_info]: newInfo\r\n                        }})\r\n                        setShouldShowSnackbar(true)\r\n                    } else {\r\n                        setShowEditor(false)\r\n                        pg.setLoading(true)\r\n\r\n                        addDetails({\r\n                            variables: {\r\n                                [addObject.add_var_info]: newInfo\r\n                            }\r\n                        })\r\n                        setShouldShowSnackbar(true)\r\n                    }\r\n                }}/>\r\n            <Grid item xs={12}>\r\n                {ToRender}\r\n            </Grid>\r\n            <Fab className={classes.fab} color=\"secondary\" onClick={() => {\r\n                setEditData(null)\r\n                setShowEditor(true)\r\n            }}>\r\n                <Icon>\r\n                    add\r\n                </Icon>\r\n            </Fab>\r\n            <Dialog onClose={() => setShowExpanded(-1)} color=\"secondary\" open={showExpanded !== -1 && showExpanded >= 0}>\r\n                {dialogRender && showExpanded !== -1 && showExpanded >= 0 && data && data[queryObject.query_tablename] ? dialogRender(data[queryObject.query_tablename][showExpanded]) : null}\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ComponentCustom","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classNameProp),\n    ref: ref\n  }, other), avatar && React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { useIsFocusVisible } from '../utils/focusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    // Remove grey highlight\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, {\n      button: classes.button\n    }[component]),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","    import React, { Fragment } from 'react'\r\n    import { ComponentCustom } from 'components/ComponentCustom'\r\n    import gql from 'graphql-tag'\r\n    import CardHeader from '@material-ui/core/CardHeader'\r\n    import { Grid, FormControl, InputLabel, Select, MenuItem, TextField, Card,  CardContent, Typography, IconButton, CardActions, Icon, Link, makeStyles, Button, DialogTitle, DialogContent, CardMedia } from '@material-ui/core'\r\n    import { useStyles } from 'utils/preset_styles'\r\n    import { fontSize, fontFamily } from '@material-ui/system'\r\n    import ReactMarkdown from 'react-markdown'\r\n\r\n\r\n    const GET_ARTS = gql`\r\n    query AllArts($options: InpOptions){\r\n        allArts(options: $options) {\r\n            _id\r\n            creator\r\n            about_creator\r\n            url_path\r\n            art_format\r\n            art_type\r\n            create_date\r\n        }\r\n    }\r\n    `\r\n\r\n    const UPDATE_ART = gql`\r\n    mutation UpdateArts($id: ID!, $art: InpArt) {\r\n        updateArt(id: $id, art:  $art) {\r\n            _id\r\n            creator\r\n            about_creator\r\n            url_path\r\n            art_type\r\n            art_format\r\n            create_date\r\n        }   \r\n    }\r\n    `\r\n\r\n    const DELETE_ART = gql`\r\n    mutation DeleteArt($id: ID!) {\r\n        deleteArt(id: $id){\r\n            _id\r\n        }\r\n    }\r\n    `\r\n\r\n    const ADD_ART = gql`\r\n    mutation AddArt($art: InpArt!) {\r\n        addArt(art: $art) {\r\n            _id\r\n            creator\r\n            about_creator\r\n            url_path\r\n            art_type\r\n            art_format\r\n            create_date\r\n        }\r\n    }\r\n    `\r\n    const constfieldsNameList = [\r\n        'creator',\r\n        'about_creator',\r\n        'url_path',\r\n        'art_type',\r\n        'art_format'\r\n    ]\r\n\r\n    const fieldNameMapping = {\r\n        'creator': {value: \"Creator\", required: true},\r\n        'about_creator': {value: \"About Creator\", required: true},\r\n        'url_path': {value: \"URL path\", required: true},\r\n        \"art_format\": {value: \"Format\", required: true}\r\n    }\r\n\r\n    const cStyles = makeStyles(() => ({\r\n        editor: {\r\n            fontFamily: \"IBM Plex Mono, ubuntu mono, consolas, source code pro, monospace !important\"\r\n        }\r\n    }))\r\n\r\n    const Arts = () => {\r\n\r\n        const preset_styles = useStyles()\r\n        const cstyles = cStyles()\r\n\r\n\r\n        const renderHandler = (item, itemIndex, onClickEdit, onClickDelete) => {\r\n\r\n            const date = new Date()\r\n            date.setTime(item.create_date)\r\n            const day = date.getUTCDate()\r\n            const mon = date.getMonth() + 1\r\n            const year = date.getFullYear()\r\n            const fdate = `${mon}/${day}/${year}`\r\n        \r\n            return (\r\n            <Grid key={itemIndex} item xs={12} sm={6} md={4} lg={3} classname={`${preset_styles.mx2} ${preset_styles.my2}`}>\r\n                <Card>\r\n                    <CardHeader \r\n                        title={item.creator}\r\n                        subheader={item.about_creator}\r\n                    />\r\n                <CardContent>\r\n                    <Typography variant=\"overline\">Preview</Typography>\r\n                    {\r\n                        item.art_type === 'image' ?\r\n                        <img style={{width: \"100%\", maxHeight: \"360px\"}} src={item.url_path} /> :\r\n                        <iframe style={{maxHeight: \"360px\", width: \"100%\"}} src={item.url_path}>\r\n                        </iframe>\r\n                    }\r\n                    <Link target=\"_blank\" rel=\"noreferrer\" href={item.url_path}>{item.art_type}</Link>\r\n                    <Typography>Created On: {fdate}</Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                        <IconButton onClick={onClickEdit}>\r\n                            <Icon>edit</Icon>\r\n                        </IconButton>\r\n                        <IconButton onClick={onClickDelete}>\r\n                            <Icon>delete</Icon>\r\n                        </IconButton>\r\n                </CardActions>\r\n                </Card>\r\n            </Grid>)\r\n        }\r\n        \r\n        return (\r\n            <ComponentCustom \r\n                updateObject={{\r\n                    update_query: UPDATE_ART,\r\n                    error_message: \"Error Upadting Art\",\r\n                    success_message: \"Updated Art!\",\r\n                    update_var_unique: \"id\",\r\n                    update_var_info: \"art\"\r\n                }}\r\n\r\n                deleteObject={{\r\n                    delete_query: DELETE_ART,\r\n                    delete_unique_var: \"id\",\r\n                    delete_unique_field: \"_id\",\r\n                    error_message: \"Error deleting Art\",\r\n                    success_message: \"Deleted Art!\"\r\n                }}\r\n\r\n                queryObject={{\r\n                    query_query: GET_ARTS,\r\n                    query_unique_field: \"_id\",\r\n                    query_tablename: \"allArts\",\r\n                    forEachItem: renderHandler,\r\n                    query_params: {\r\n                        type: \"art\"\r\n                    }\r\n                }}\r\n\r\n                addObject={{\r\n                    add_query: ADD_ART,\r\n                    error_message: \"Error Adding Article\",\r\n                    success_message: \"Added Article\",\r\n                    add_var_info: \"art\"\r\n                }}\r\n\r\n                constfieldsNameList = {constfieldsNameList}\r\n                fieldNameMapping={fieldNameMapping}\r\n\r\n                dialogRender={\r\n                    (item) => {\r\n                        return (\r\n                            <Fragment>\r\n                                <DialogTitle>\r\n                                    {item.title}\r\n                                </DialogTitle>\r\n                                <DialogContent dividers>\r\n                                    {item.text}\r\n                                </DialogContent>\r\n                            </Fragment>\r\n                        ) \r\n                    }\r\n                }\r\n\r\n                editorRender = {(fields, onChange) => {\r\n\r\n                    console.log(fields)\r\n\r\n                    return (\r\n                            <Grid item xs={12}>\r\n                                <Grid container>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField margin=\"normal\" noWrap fullWidth label=\"Creator\" required name={`creator`} value={fields[\"creator\"]} onChange={onChange} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField margin=\"normal\" noWrap fullWidth label=\"About Creator\" required name={`about_creator`} value={fields[\"about_creator\"]} onChange={onChange} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField margin=\"normal\" noWrap fullWidth label=\"URL\" required name={`url_path`} value={fields[\"url_path\"]} onChange={onChange} />\r\n                                    </Grid>\r\n                                    <FormControl fullWidth>\r\n                                    <InputLabel>Art Format</InputLabel>\r\n                                        <Select value={fields.art_format}\r\n                                        onChange={onChange} inputProps={{name: \"art_format\"}}>\r\n                                            <MenuItem value={\"video\"}>Video</MenuItem>\r\n                                            <MenuItem value={\"image\"}>Image</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl fullWidth>\r\n                                    <InputLabel>Art Type</InputLabel>\r\n                                        <Select value={fields.art_type}\r\n                                        onChange={onChange} inputProps={{name: \"art_type\"}}>\r\n                                            <MenuItem value={\"art\"}>Art</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>        \r\n                        ) \r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    export default Arts"],"sourceRoot":""}